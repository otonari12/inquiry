# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.9
    environment:
      GOOS: linux
      GOARCH: amd64
    working_directory: /go/src/inquiry-api
    steps:
    - checkout
    - restore_cache:
        keys:
            - v1-vendor-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
            - v1-dep
    - run:
        name: dep ensure
        command: |
            if [ ! -d vendor ]; then
              if ! type dep >/dev/null 2>&1; then
                go get -u github.com/golang/dep/cmd/dep
              fi
              dep ensure
            fi
    - save_cache:
        key: v1-vendor-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
        paths:
            - src/vendor
    - save_cache:
        key: v1-dep
        paths:
            - /go/bin/dep
    - run:
        name: go build
        command: |
            go build -o .circleci/inquiery-api
    - persist_to_workspace:
        root: /go/src/inquiry-api/.circleci
        paths:
          - .
  push:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: /working
    steps:
    - run: mkdir -p /go/src/inquiry-api/.circleci
    - attach_workspace:
        at: /go/src/inquiry-api/.circleci
    - run: ls
    - run: ls /go/src/inquiry-api/.circleci
    - setup_remote_docker
    - run: sudo pip install awscli
    - run: $(aws ecr get-login --region ap-northeast-1 --no-include-email)
    - run:
        name: create docker image
        command: |
            cd .circleci
            docker build . -t inquiry-api
    - run: docker tag inquiry-api:$CIRCLE_SHA1 ${AWS_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/inquiry-api:$CIRCLE_SHA1
    - run: docker push ${AWS_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/inquiry-api:$CIRCLE_SHA1

workflows:
  version: 2
  workflow:
    jobs:
    - build
    - push:
        requires:
        - build